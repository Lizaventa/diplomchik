{
    "swagger": "2.0",
    "info": {
        "description": "Diploma Documentation.",
        "title": "Lab",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/auth/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a user from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User methods"
                ],
                "summary": "Delete",
                "responses": {
                    "200": {
                        "description": "All users in system",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/getall": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "GetAll function returns list of all users in database(test function)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "temporary methods"
                ],
                "summary": "GetAll",
                "responses": {
                    "200": {
                        "description": "All users in system",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.User"
                            }
                        }
                    },
                    "404": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/getpersonalinfo": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetch personal information of the active user based on the access token provided in the Authorization header.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User methods"
                ],
                "summary": "Get Personal Info",
                "responses": {
                    "200": {
                        "description": "User's personal information",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Logs in a user and returns access and refresh tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication methods"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": " Generating access and refresh tokens",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Creates a new user in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication methods"
                ],
                "summary": "SignUp",
                "parameters": [
                    {
                        "description": "Sign up details",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SignUp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User has been registered successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/courier/choose_availible_delivery": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "allows the courier to choose delivery",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courier Bussiness logic"
                ],
                "summary": "ChooseAvailibleDelivery",
                "parameters": [
                    {
                        "description": "Delivery to create",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.DeliveryId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delivery has been sucessfully choosed by courier",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/courier/getalldeliveries": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "GetAlldeliveries",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courier Bussiness logic"
                ],
                "summary": "GetAlldeliveries",
                "responses": {
                    "200": {
                        "description": "Delivery has been sucessfully created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.DeliveryGet"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/courier/update_delivery_status": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "allows the courier to update delivery status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courier Bussiness logic"
                ],
                "summary": "UpdateDeliveryStatus",
                "parameters": [
                    {
                        "description": "Delivery status to update",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.DeliveryStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delivery status has been sucessfully updated by courier",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/courier/updatecourier": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates Courier information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courier Bussiness logic"
                ],
                "summary": "UpdateCourier",
                "parameters": [
                    {
                        "description": "Courier to update",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Courier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Courier info has been sucessfully updated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/delivery/create_delivary": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new delivery instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courier Bussiness logic"
                ],
                "summary": "CreateDelivery",
                "parameters": [
                    {
                        "description": "Delivery to create",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Delivery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delivery has been sucessfully created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Courier": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "perfomance_indicator": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                }
            }
        },
        "model.Delivery": {
            "type": "object",
            "properties": {
                "courier_id": {
                    "type": "string"
                },
                "delivery_comment": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "delivery_status": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "model.DeliveryGet": {
            "type": "object",
            "properties": {
                "delivery_comment": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "delivery_status": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "model.DeliveryId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "model.DeliveryStatus": {
            "type": "object",
            "properties": {
                "delivery_status": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "model.Login": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.SignUp": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "refresh_token": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}